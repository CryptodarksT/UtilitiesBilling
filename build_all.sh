#!/bin/bash
echo "========================================"
echo "    PAYOO - BUILD SCRIPT T·ªîNG H·ª¢P"
echo "========================================"
echo ""

# Ki·ªÉm tra y√™u c·∫ßu h·ªá th·ªëng
echo "üîç Ki·ªÉm tra y√™u c·∫ßu h·ªá th·ªëng..."

# Ki·ªÉm tra Python
if command -v python3 &> /dev/null; then
    echo "‚úÖ Python ƒë√£ c√†i ƒë·∫∑t"
    python3 --version
    PYTHON_OK=true
else
    echo "‚ùå Python kh√¥ng ƒë∆∞·ª£c c√†i ƒë·∫∑t!"
    echo "üì• C√†i ƒë·∫∑t Python: sudo apt install python3 python3-pip (Ubuntu/Debian)"
    PYTHON_OK=false
fi

# Ki·ªÉm tra Node.js
if command -v node &> /dev/null; then
    echo "‚úÖ Node.js ƒë√£ c√†i ƒë·∫∑t"
    node --version
    NODE_OK=true
else
    echo "‚ùå Node.js kh√¥ng ƒë∆∞·ª£c c√†i ƒë·∫∑t!"
    echo "üì• C√†i ƒë·∫∑t Node.js: https://nodejs.org"
    NODE_OK=false
fi

echo ""
echo "========================================"
echo "        L·ª∞A CH·ªåN BUILD"
echo "========================================"
echo ""
echo "1. Build Python Desktop App (Linux/macOS)"
echo "2. Build Web Application"
echo "3. Build Electron Desktop App"
echo "4. Build All (Full Package)"
echo "5. Tho√°t"
echo ""
read -p "Nh·∫≠p l·ª±a ch·ªçn (1-5): " choice

case $choice in
    1)
        echo ""
        echo "========================================"
        echo "    BUILD PYTHON DESKTOP APP"
        echo "========================================"
        if [ "$PYTHON_OK" = false ]; then
            echo "‚ùå Python ch∆∞a c√†i ƒë·∫∑t!"
            exit 1
        fi

        if [ ! -f "payoo-desktop/main.py" ]; then
            echo "‚ùå Kh√¥ng t√¨m th·∫•y payoo-desktop/main.py"
            exit 1
        fi

        echo "üöÄ B·∫Øt ƒë·∫ßu build Python Desktop App..."
        cd payoo-desktop

        # T·∫°o virtual environment
        if [ ! -d "venv" ]; then
            echo "üîß T·∫°o virtual environment..."
            python3 -m venv venv
        fi

        # K√≠ch ho·∫°t virtual environment
        source venv/bin/activate

        # C√†i ƒë·∫∑t dependencies
        echo "üì¶ C√†i ƒë·∫∑t dependencies..."
        pip install -r requirements.txt

        # Build v·ªõi PyInstaller
        echo "üî® Build executable..."
        pyinstaller --onefile --windowed --name=PayooDesktop \
            --distpath=dist \
            --workpath=build \
            --add-data=src:src \
            --add-data=assets:assets \
            --hidden-import=customtkinter \
            --hidden-import=CTkMessagebox \
            --hidden-import=requests \
            --hidden-import=cryptography \
            --hidden-import=pandas \
            --hidden-import=openpyxl \
            --hidden-import=matplotlib \
            --hidden-import=numpy \
            --hidden-import=PIL \
            --hidden-import=tkinter \
            --noconsole \
            main.py

        if [ $? -eq 0 ]; then
            echo "‚úÖ Build Python Desktop App ho√†n th√†nh!"
            echo "üìÅ File: payoo-desktop/dist/PayooDesktop"
        else
            echo "‚ùå Build th·∫•t b·∫°i!"
            exit 1
        fi

        cd ..
        ;;
    2)
        echo ""
        echo "========================================"
        echo "       BUILD WEB APPLICATION"
        echo "========================================"
        if [ "$NODE_OK" = false ]; then
            echo "‚ùå Node.js ch∆∞a c√†i ƒë·∫∑t!"
            exit 1
        fi

        if [ ! -f "package.json" ]; then
            echo "‚ùå Kh√¥ng t√¨m th·∫•y package.json"
            exit 1
        fi

        echo "üöÄ B·∫Øt ƒë·∫ßu build Web Application..."
        echo "üì¶ C√†i ƒë·∫∑t dependencies..."
        npm install

        if [ $? -ne 0 ]; then
            echo "‚ùå L·ªói c√†i ƒë·∫∑t dependencies"
            exit 1
        fi

        echo "üî® Build production..."
        npm run build

        if [ $? -eq 0 ]; then
            echo "‚úÖ Build Web Application ho√†n th√†nh!"
            echo "üìÅ Files t·∫°i: dist/"
        else
            echo "‚ùå L·ªói build"
            exit 1
        fi
        ;;
    3)
        echo ""
        echo "========================================"
        echo "    BUILD ELECTRON DESKTOP APP"
        echo "========================================"
        if [ "$NODE_OK" = false ]; then
            echo "‚ùå Node.js ch∆∞a c√†i ƒë·∫∑t!"
            exit 1
        fi

        echo "üöÄ B·∫Øt ƒë·∫ßu build Electron Desktop App..."
        echo "üì¶ C√†i ƒë·∫∑t dependencies..."
        npm install

        echo "üì¶ C√†i ƒë·∫∑t Electron..."
        npm install electron electron-builder --save-dev

        echo "üî® Build web app..."
        npm run build

        # T·∫°o electron-main.js n·∫øu ch∆∞a c√≥
        if [ ! -f "electron-main.js" ]; then
            echo "üìù T·∫°o electron-main.js..."
            cat > electron-main.js << 'EOF'
const { app, BrowserWindow } = require('electron');
const path = require('path');

function createWindow() {
    const mainWindow = new BrowserWindow({
        width: 1200,
        height: 800,
        webPreferences: {
            nodeIntegration: true,
            contextIsolation: false
        }
    });

    mainWindow.loadURL('http://localhost:5000');
}

app.whenReady().then(createWindow);

app.on('window-all-closed', () => {
    if (process.platform !== 'darwin') {
        app.quit();
    }
});
EOF
        fi

        echo "üî® Build Electron app..."
        npx electron-builder --linux

        if [ $? -eq 0 ]; then
            echo "‚úÖ Build Electron Desktop App ho√†n th√†nh!"
            echo "üìÅ Files t·∫°i: dist-electron/"
        else
            echo "‚ùå L·ªói build Electron"
            exit 1
        fi
        ;;
    4)
        echo ""
        echo "========================================"
        echo "         BUILD ALL PACKAGES"
        echo "========================================"
        echo "üöÄ B·∫Øt ƒë·∫ßu build t·∫•t c·∫£ packages..."

        # Build Python Desktop App
        if [ "$PYTHON_OK" = true ]; then
            echo ""
            echo "üêç Building Python Desktop App..."
            cd payoo-desktop
            if [ ! -d "venv" ]; then
                python3 -m venv venv
            fi
            source venv/bin/activate
            pip install -r requirements.txt
            python3 build.py
            if [ $? -eq 0 ]; then
                echo "‚úÖ Python Desktop App ho√†n th√†nh!"
            else
                echo "‚ùå L·ªói build Python app"
                exit 1
            fi
            cd ..
        fi

        # Build Web Application
        if [ "$NODE_OK" = true ]; then
            echo ""
            echo "üåê Building Web Application..."
            npm install
            npm run build
            if [ $? -eq 0 ]; then
                echo "‚úÖ Web Application ho√†n th√†nh!"
            else
                echo "‚ùå L·ªói build web app"
                exit 1
            fi
        fi

        echo ""
        echo "========================================"
        echo "        BUILD ALL HO√ÄN TH√ÄNH!"
        echo "========================================"
        echo ""
        echo "üì¶ Packages ƒë√£ ƒë∆∞·ª£c t·∫°o:"
        if [ "$PYTHON_OK" = true ]; then
            echo "    - payoo-desktop/dist/PayooDesktop"
        fi
        if [ "$NODE_OK" = true ]; then
            echo "    - dist/index.js (Web server)"
            echo "    - dist/public/ (Static files)"
        fi
        ;;
    5)
        echo ""
        echo "üëã Tho√°t script build"
        exit 0
        ;;
    *)
        echo "‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!"
        exit 1
        ;;
esac

echo ""
echo "========================================"
echo "           TH√ÄNH C√îNG!"
echo "========================================"
echo ""
echo "üéâ Build ho√†n th√†nh th√†nh c√¥ng!"
echo "üìñ Xem chi ti·∫øt t·∫°i: H∆Ø·ªöNG_D·∫™N_BUILD_TO√ÄN_DI·ªÜN.md"
echo "üìß H·ªó tr·ª£: dev@payoo.vn"
echo ""